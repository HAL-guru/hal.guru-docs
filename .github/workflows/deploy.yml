name: Deploy GitHub Pages

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [deploy]

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read
  deployments: write
  checks: write

defaults:
  run:
    shell: bash

jobs:
  build:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Auto-generate manual and version files
        shell: bash
        run: |
          chmod +x docs/halguru-install.sh
          docs/halguru-install.sh --no-run
          chmod +x ./halguru-generate-manual.sh
          ./halguru-generate-manual.sh
          halguru --version
          halguru --version > docs/halguru-cli/-version.txt
          docs/halguru-install.sh --pre-release --no-run
          halguru --version
          halguru --version > docs/halguru-cli/-version-prerelease.txt

      - name: Build website
        run: |
          pip install mkdocs-material mkdocs-macros-plugin
          mkdocs build
          test -d site && echo "Site directory exists" || echo "Missing site directory"
          ls -la site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    timeout-minutes: 10
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
      actions: read
      deployments: write
    environment:
      url: ${{ steps.deployment.outputs.page_url }}
      name: github-pages

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./artifact

      - name: Extract artifact
        run: |
          cd ./artifact
          tar xf artifact.tar
          ls -la

      - name: Verify artifact
        run: |
          ls -la ./artifact
          du -sh ./artifact

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ./artifact
        timeout-minutes: 30
